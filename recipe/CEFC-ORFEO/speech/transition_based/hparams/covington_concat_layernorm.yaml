# Seed needs to be set at top of yaml, before objects with parameters are made
seed: 1234
__set_seed: !!python/object/apply:torch.manual_seed [ !ref <seed> ]
output_folder: !ref results/Orfeo_convinton_concat_layer_norm/<seed>
wer_file: !ref <output_folder>/wer.txt
save_folder: !ref <output_folder>/save
train_log: !ref <output_folder>/train_log.txt

# URL for the biggest LeBenchmark wav2vec french.
wav2vec2_hub: LeBenchmark/wav2vec2-FR-7K-large

# Data files
data_folder:  /home/getalp/data/ASR_data/FR/CORPUS_AUDIO/cefc-orfeo_v.1.5_december2021/11/oral  # e.g, /localscratch/cv-corpus-5.1-2020-06-22/fr
train_tsv_file: !ref <data_folder>/train.tsv  # Standard CommonVoice .tsv files
dev_tsv_file: !ref <data_folder>/dev.tsv  # Standard CommonVoice .tsv files
test_tsv_file: !ref <data_folder>/test.tsv  # Standard CommonVoice .tsv files
accented_letters: True
language: fr # use 'it' for Italian, 'rw' for Kinyarwanda, 'en' for english
train_csv: !ref <save_folder>/train.csv
valid_csv: !ref <save_folder>/dev.csv
test_csv: !ref <save_folder>/test.csv
skip_prep: True # Skip data preparation



#CONLLU GOLD FILE used for evaluation
dir_gold_conllu: /home/getalp/pupiera/package/ParseBrain/recipe/CEFC-ORFEO/orfeosave/orfeo_cleaned_v2/conllu/
dev_gold_conllu: !ref <dir_gold_conllu>/dev_TS_cleaned.conllu
test_gold_conllu: !ref <dir_gold_conllu>/test_TS_cleaned.conllu
dev_output_conllu: !ref <output_folder>/Eval-Valid_AUDIO
test_output_conllu: !ref <output_folder>/Eval-test_AUDIO
transcript_file: transcript_test_AUDIO


# We remove utterance slonger than 10s in the train/dev/test sets as
# longer sentences certainly correspond to "open microphones".
avoid_if_longer_than: 10.
avoid_if_shorter_than: 0.3



# With data_parallel batch_size is split into N jobs
# With DDP batch_size is multiplied by N jobs
# Must be 6 per GPU to fit 16GB of VRAM
batch_size: 8 #8
test_batch_size: 8 #32 #4

dataloader_options:
  batch_size: !ref <batch_size>
  num_workers: 1
test_dataloader_options:
  batch_size: !ref <test_batch_size>
  num_workers: 8


#tokenizer
tokenizer: !new:sentencepiece.SentencePieceProcessor


embedding_dim: 768


# Training parameters
number_of_epochs: 30
number_of_epochs_static: 0
number_of_ctc_epochs: 15
lr: 1.0
lr_wav2vec: 0.0001
ctc_weight: 0.3
sorting: ascending
auto_mix_prec: False
sample_rate: 16000


#Models param
#activation: !name:torch.nn.LeakyReLU
dnn_layers: 3
dnn_neurons: 1024
emb_size: 128
dec_neurons: 1024
freeze_wav2vec: False

token_type: char  # ["unigram", "bpe", "char"]
character_coverage: 1.0

output_neurons: 59  # BPE size, index(blank/eos/bos) = 0

ckpt_interval_minutes: 30 # save checkpoint every N minutes


# Decoding parameters
# Be sure that the bos and eos index match with the BPEs ones
blank_index: 0
bos_index: 1
eos_index: 2
min_decode_ratio: 0.0
max_decode_ratio: 1.0
beam_size: 80
eos_threshold: 1.5
using_max_attn_shift: True
max_attn_shift: 140
ctc_weight_decode: 0.0
temperature: 1.50


#
#Speech Recognition
#
#


enc: !new:speechbrain.nnet.containers.Sequential
    input_shape: [null, null, 1024]
    linear1: !name:speechbrain.nnet.linear.Linear
        n_neurons: 1024
        bias: True
    ln1: !name:speechbrain.nnet.normalization.LayerNorm
    activation: !new:torch.nn.LeakyReLU
    drop: !new:torch.nn.Dropout
        p: 0.15
    linear2: !name:speechbrain.nnet.linear.Linear
        n_neurons: 1024
        bias: True
    ln2: !name:speechbrain.nnet.normalization.LayerNorm
    activation2: !new:torch.nn.LeakyReLU
    drop2: !new:torch.nn.Dropout
        p: 0.15
    linear3: !name:speechbrain.nnet.linear.Linear
        n_neurons: 1024
        bias: True
    ln3: !name:speechbrain.nnet.normalization.LayerNorm
    activation3: !new:torch.nn.LeakyReLU

wav2vec2: !new:speechbrain.lobes.models.huggingface_wav2vec.HuggingFaceWav2Vec2
    source: !ref <wav2vec2_hub>
    output_norm: True
    freeze: !ref <freeze_wav2vec>
    save_path: !ref <save_folder>/wav2vec2_checkpoint

ctc_lin: !new:speechbrain.nnet.linear.Linear
    input_size: !ref <dnn_neurons>
    n_neurons: !ref <output_neurons>

log_softmax: !new:speechbrain.nnet.activations.Softmax
    apply_log: True


#
# FUSION LAYER
#

repFusionHidden: 500
repFusionBidirectional: False
repFusionLayers: 2
RepFusionModel: !new:speechbrain.nnet.RNN.LSTM
    input_shape: [null, null, 1024] # enc val
    hidden_size: !ref <repFusionHidden>
    num_layers: !ref <repFusionLayers>
    bias: True
    dropout: 0.5
    bidirectional: !ref <repFusionBidirectional>


# RNN, same value than in HOPS, (to be comparable)

rnn_hidden_size: 384
rnn_num_layer: 3
rnn_bidirectional: True
rnn_input: !ref <repFusionHidden>

encoder_rnn:  !new:speechbrain.nnet.RNN.LSTM
  input_shape: [null, null, !ref <rnn_input>]
  hidden_size: !ref <rnn_hidden_size>
  num_layers: !ref <rnn_num_layer>
  bias: True
  dropout: 0.5
  bidirectional: !ref <rnn_bidirectional>


#
# Parser
#
# Transition (UAS)
#

special_embedding : !new:speechbrain.nnet.embedding.Embedding
  num_embeddings: 3
  embedding_dim: !ref <embedding_dim>
  consider_as_one_hot: False


concat_embed_dim: !ref <stack_depth_computer> + <embedding_dim>

#3072 is 768 *4
neural_network: !new:speechbrain.nnet.containers.Sequential
  input_shape: [null, 3072]
  linear1: !name:speechbrain.nnet.linear.Linear
    n_neurons: 1024
    bias: True
  activation1: !new:torch.nn.LeakyReLU
  drop1: !new:torch.nn.Dropout
    p: 0.40
  linear2: !name:speechbrain.nnet.linear.Linear
    n_neurons: 768
    bias: True
  activation2: !new:torch.nn.LeakyReLU
  drop2: !new:torch.nn.Dropout
    p: 0.40

head_UAS: !new:speechbrain.nnet.containers.Sequential
  input_shape: [null, 768]
  linear1: !name:speechbrain.nnet.linear.Linear
    n_neurons: 768
    bias: True
  activation1: !new:torch.nn.LeakyReLU
  drop1: !new:torch.nn.Dropout
    p: 0.40
  linear2: !name:speechbrain.nnet.linear.Linear
    n_neurons: 768
    bias: True
  activation2: !new:torch.nn.LeakyReLU
  drop2: !new:torch.nn.Dropout
    p: 0.40
  linear_head_UAS: !name:speechbrain.nnet.linear.Linear
    n_neurons: !ref <number_transitions>
    bias: True

#  log_softmax: !new:speechbrain.nnet.activations.Softmax
#    apply_log: True

number_transitions: 4
transition: !new:parsebrain.processing.dependency_parsing.transition_based.transition.CovingtonTransition

#
# Label (LAS)
#

neural_network_label: !new:speechbrain.nnet.containers.Sequential
    input_shape: [null, null, 1536]
    linear1: !name:speechbrain.nnet.linear.Linear
        n_neurons: 1024
        bias: True   
    ln1: !name:speechbrain.nnet.normalization.LayerNorm
    activation: !new:torch.nn.LeakyReLU
    drop: !new:torch.nn.Dropout
        p: 0.15
    linear2: !name:speechbrain.nnet.linear.Linear
        n_neurons: 1024
        bias: True
    ln2: !name:speechbrain.nnet.normalization.LayerNorm
    activation2: !new:torch.nn.LeakyReLU
    linear_head: !name:speechbrain.nnet.linear.Linear
      n_neurons: !ref <number_label>
      bias: True
    log_softmax: !new:speechbrain.nnet.activations.Softmax
      apply_log: True

number_label: 17      


#
# UPOS
#

neural_network_POS: !new:speechbrain.nnet.containers.Sequential
  input_shape: [ null, null, 768 ]
  linear1: !name:speechbrain.nnet.linear.Linear
    n_neurons: 768
    bias: True
  activation: !new:torch.nn.LeakyReLU
  drop: !new:torch.nn.Dropout
    p: 0.50
  linear_head: !name:speechbrain.nnet.linear.Linear
    n_neurons: !ref <number_POS>
    bias: True
  log_softmax: !new:speechbrain.nnet.activations.Softmax
    apply_log: True

number_POS: 22

stack_depth_computer: 2
n_buffer: 2

features_computer: !new:parsebrain.processing.dependency_parsing.transition_based.configuration_features_computer.ConfigurationFeaturesComputerConcatFlat
  stack_depth: !ref <stack_depth_computer>
  dim: !ref <embedding_dim>
  embedding: !ref <special_embedding>
  n_buffer: !ref <n_buffer>

dynamic_oracle: !new:parsebrain.processing.dependency_parsing.transition_based.dynamic_oracle.DynamicOracleCovington

label_parser: !new:parsebrain.processing.dependency_parsing.transition_based.label.LabelPolicieEmbedding

parser: !new:parsebrain.processing.dependency_parsing.transition_based.TransitionBasedParser
  neural_network: !ref <neural_network>
  decision_head: !ref <head_UAS>
  label_neural_network: !ref <neural_network_label>
  transition: !ref <transition>
  features_computer: !ref <features_computer>
  dynamic_oracle: !ref <dynamic_oracle>
  label_policie: !ref <label_parser>
  exploration_rate: 0


# Loss function

ctc_cost: !name:speechbrain.nnet.losses.ctc_loss
    blank_index: !ref <blank_index>

parse_cost: !name:speechbrain.nnet.losses.nll_loss
  reduction: "mean"

label_cost: !name:speechbrain.nnet.losses.nll_loss
  reduction: "mean"

pos_cost: !name:speechbrain.nnet.losses.nll_loss
  reduction: "mean"


model_opt_class: !name:torch.optim.Adadelta
  lr: !ref <lr>
  rho: 0.95
  eps: 1.e-8


wav2vec_opt_class: !name:torch.optim.Adam
  lr: !ref <lr_wav2vec>

lr_annealing_model: !new:speechbrain.nnet.schedulers.NewBobScheduler
    initial_value: !ref <lr>
    improvement_threshold: 0.0025
    annealing_factor: 0.8
    patient: 0

lr_annealing_wav2vec: !new:speechbrain.nnet.schedulers.NewBobScheduler
    initial_value: !ref <lr_wav2vec>
    improvement_threshold: 0.0025
    annealing_factor: 0.9
    patient: 0

scheduler: !new:parsebrain.processing.dependency_parsing.transition_based.dynamic_oracle.scheduler.LinearScheduler
  growth_rate: 0.05

#
# Functions and classes
#
epoch_counter: !new:speechbrain.utils.epoch_loop.EpochCounter
  limit: !ref <number_of_epochs>

modules:
    wav2vec2: !ref <wav2vec2>
    enc: !ref <enc>
    ctc_lin: !ref <ctc_lin>
    RepFusionModel: !ref <RepFusionModel>
    encoder_rnn: !ref <encoder_rnn>
    parser: !ref <neural_network>
    head_UAS: !ref <head_UAS>
    network_label: !ref <neural_network_label>
    pos_network: !ref <neural_network_POS>
    special_embedding: !ref <special_embedding>

model: !new:torch.nn.ModuleList
  - [!ref <enc>, !ref <ctc_lin>, !ref <RepFusionModel>, !ref <encoder_rnn>,
    !ref <neural_network>, !ref <head_UAS>, !ref <neural_network_POS>,
    !ref <special_embedding>, !ref <neural_network_label>]
#
# Metrics
#

acc_dyna: !new:speechbrain.utils.Accuracy.AccuracyStats
acc_dyna_with_oracle: !new:speechbrain.utils.Accuracy.AccuracyStats

error_rate_computer: !name:speechbrain.utils.metric_stats.ErrorRateStats

cer_computer: !name:speechbrain.utils.metric_stats.ErrorRateStats
    split_tokens: True

dep2Label_computer: !name:speechbrain.utils.metric_stats.BinaryMetricStats

gov2Label_computer: !name:speechbrain.utils.metric_stats.BinaryMetricStats


#
# Checkpointer
#

checkpointer: !new:speechbrain.utils.checkpoints.Checkpointer
  checkpoints_dir: !ref <save_folder>
  recoverables:
    model: !ref <model>
    #scheduler_model: !ref <lr_annealing_model>
    counter: !ref <epoch_counter>


#
# PARSING ARCHI
#

LABEL_PADDING: -100

reader_alig:  !new:parsebrain.processing.dependency_parsing.sequence_labeling.alignment_oracle.reader.ReaderSpeechbrain

oracle: !new:parsebrain.processing.dependency_parsing.graph_based.alignment_oracle.AlignmentOracle
    reader_alig: !ref <reader_alig>

evaluator : !new:parsebrain.processing.dependency_parsing.eval.speech_conll18_ud_eval.SpeechEval

encoding: !new:parsebrain.processing.dependency_parsing.sequence_labeling.encoding.RelPosEncoding

#
## File path
#
alig_path: !ref <output_folder>/alignment_file


train_logger: !new:speechbrain.utils.train_logger.FileTrainLogger
    save_file: !ref <train_log>


